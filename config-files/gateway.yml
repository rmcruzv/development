security:
  sessions: ALWAYS
server:
  port: 8082
  
#conf del servidor de eureka
eureka:
  password: '123456'
  client:
    serviceUrl:
      defaultZone: http://user:${eureka.password}@localhost:8761/eureka/

---
spring.profiles: DEVELOPMENT_VICKY

#comando para arrancar el servidor redis: docker run --rm -i -t -p 6379:6379 redis
spring.redis.host: 192.168.59.103

#URL DE LOGIN 
fgn.loginUrl: http://localhost:8081/PortalFGN/ws-fgn/userByDoc

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
#    org.springframework.beans: DEBUG
#    org.springframework: DEBUG
#    org.hibernate: DEBUG

zuul:
  routes:
    fgn-pqrs:
      url: /pqrs/**
      serviceId: pqrs
    frontend:
      path: /ui/**
      serviceId: frontend
#PRUEBA DE INTEGRACION CON SSO
#    user:
#      path: /user/**
#      url: http://localhost:9999/sso/user
#spring:
#  oauth2:
#    sso:
#      home:
#        secure: false
#        path: /,/**/*.html
#    client:
#      accessTokenUri: http://localhost:9999/sso/oauth/token
#      userAuthorizationUri: http://localhost:9999/sso/oauth/authorize
#      clientId: fgn
#      clientSecret: Mimojal263
#    resource:
#      userInfoUri: http://localhost:9999/sso/user
      
#configuración de JPA      
#esto crea la base de datos con base en el mapeo de objetos
spring:
  datasource:
    url: jdbc:oracle:thin:@localhost:1521:xe
    username: SECURE_DOC
    password: SECURE_DOC
    driverClassName: oracle.jdbc.driver.OracleDriver
  jpa:
    generate-ddl: true
    hibernate.ddl-auto: create
    properties.hibernate.hbm2ddl.import_files: init-data.sql
    show-sql: true
#Fin configuración de JPA

---
spring.profiles: DEVELOPMENT
spring.redis.host: 192.168.0.9

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
#    org.springframework.beans: DEBUG
#    org.springframework: DEBUG
#    org.hibernate: DEBUG

zuul:
  routes:
    fgn-pqrs:
      url: /pqrs/**
      serviceId: pqrs
    frontend:
      path: /ui/**
      serviceId: frontend
      
#configuración de JPA      
#esto crea la base de datos con base en el mapeo de objetos
spring:
  datasource:
    url: jdbc:oracle:thin:@localhost:1521:xe
    username: SECURE_DOC
    password: SECURE_DOC
    driverClassName: oracle.jdbc.driver.OracleDriver
  jpa:
    generate-ddl: true
    hibernate.ddl-auto: create
    properties.hibernate.hbm2ddl.import_files: init-data.sql
    show-sql: true
#Fin configuración de JPA
